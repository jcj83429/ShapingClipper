cmake_minimum_required(VERSION 2.8)
project(main CXX)

# Force C++11
if(CMAKE_COMPILER_IS_GNUCXX)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -ggdb -std=gnu++0x")
endif()
if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
    if(APPLE)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++")
    endif()
endif()

set(CMAKE_INCLUDE_PATH "${CMAKE_INCLUDE_PATH}" :..)

# On Windows the library location must be explicitly specified
if(WIN32)
    if(AQUILA_ROOT)
        set(AQUILA_INCLUDE_DIR "${AQUILA_ROOT}\\include")
        set(AQUILA_LIB_DIR "${AQUILA_ROOT}\\lib")
        message("AQUILA_ROOT: ${AQUILA_ROOT}")
        message("AQUILA_INCLUDE_DIR: ${AQUILA_INCLUDE_DIR}")
        message("AQUILA_LIB_DIR: ${AQUILA_LIB_DIR}")
        include_directories(${AQUILA_INCLUDE_DIR})
        link_directories(${AQUILA_LIB_DIR})
    else()
        message(FATAL_ERROR "Define AQUILA_ROOT when calling cmake.")
    endif()
endif()

add_executable(main main.cpp ShapingClipper.h ShapingClipper.cpp)
target_link_libraries(main Aquila)
target_link_libraries(main Ooura_fft)
